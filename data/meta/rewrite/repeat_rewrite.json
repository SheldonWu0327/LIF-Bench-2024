{
  "claude-3-opus-20240229": {
    "llm_output": "[\n  \"Please extract {num} critical sentences along with their respective categories. The result should have {num} lines, with each line containing a sentence and its category delimited by '{sep}'.\",\n  \"Identify {num} important sentences and their associated types. Present the output in {num} lines, where each line includes a sentence followed by its type, separated using '{sep}'.\",\n  \"Generate {num} principal sentences and their corresponding classifications. Divide the output into {num} lines, with each line featuring a sentence and its classification, distinguished by '{sep}'.\",\n  \"Produce {num} essential sentences and their related categories. Format the output into {num} lines, each consisting of a sentence and its category, separated by '{sep}'.\",\n  \"Extract {num} crucial sentences and their respective types. Arrange the output in {num} lines, where each line comprises a sentence and its type, divided by '{sep}'.\",\n  \"Identify {num} vital sentences and their corresponding classifications. Structure the output into {num} lines, with each line containing a sentence followed by its classification, separated by '{sep}'.\",\n  \"Generate {num} significant sentences and their associated categories. Present the output in {num} lines, each featuring a sentence and its category, delimited by '{sep}'.\",\n  \"Determine {num} key sentences and their related types. Organize the output into {num} lines, where each line includes a sentence and its type, distinguished by '{sep}'.\",\n  \"Isolate {num} fundamental sentences and their respective classifications. Display the output in {num} lines, with each line consisting of a sentence and its classification, separated by '{sep}'.\",\n  \"Recognize {num} primary sentences and their corresponding categories. Arrange the output into {num} lines, each containing a sentence followed by its category, divided by '{sep}'.\",\n  \"Identify {num} essential sentences and their associated types. Format the output as {num} lines, where each line features a sentence and its type, delimited by '{sep}'.\",\n  \"Extract {num} critical sentences and their respective classifications. Structure the output into {num} lines, with each line comprising a sentence and its classification, separated by '{sep}'.\",\n  \"Generate {num} vital sentences and their corresponding categories. Present the output in {num} lines, each consisting of a sentence and its category, distinguished by '{sep}'.\",\n  \"Determine {num} principal sentences and their related types. Organize the output as {num} lines, where each line includes a sentence and its type, divided by '{sep}'.\",\n  \"Isolate {num} significant sentences and their respective classifications. Display the output in {num} lines, with each line containing a sentence followed by its classification, separated by '{sep}'.\",\n  \"Identify {num} crucial sentences and their associated categories. Arrange the output into {num} lines, each featuring a sentence and its category, delimited by '{sep}'.\",\n  \"Extract {num} fundamental sentences and their corresponding types. Format the output as {num} lines, where each line comprises a sentence and its type, distinguished by '{sep}'.\",\n  \"Generate {num} primary sentences and their respective classifications. Structure the output into {num} lines, with each line consisting of a sentence and its classification, separated by '{sep}'.\",\n  \"Determine {num} essential sentences and their related categories. Present the output in {num} lines, each containing a sentence followed by its category, divided by '{sep}'.\",\n  \"Recognize {num} critical sentences and their associated types. Organize the output as {num} lines, where each line features a sentence and its type, delimited by '{sep}'.\"\n]",
    "parse_result": [
      "Please extract {num} critical sentences along with their respective categories. The result should have {num} lines, with each line containing a sentence and its category delimited by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Identify {num} important sentences and their associated types. Present the output in {num} lines, where each line includes a sentence followed by its type, separated using '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Generate {num} principal sentences and their corresponding classifications. Divide the output into {num} lines, with each line featuring a sentence and its classification, distinguished by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Produce {num} essential sentences and their related categories. Format the output into {num} lines, each consisting of a sentence and its category, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Extract {num} crucial sentences and their respective types. Arrange the output in {num} lines, where each line comprises a sentence and its type, divided by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Identify {num} vital sentences and their corresponding classifications. Structure the output into {num} lines, with each line containing a sentence followed by its classification, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Generate {num} significant sentences and their associated categories. Present the output in {num} lines, each featuring a sentence and its category, delimited by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Determine {num} key sentences and their related types. Organize the output into {num} lines, where each line includes a sentence and its type, distinguished by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Isolate {num} fundamental sentences and their respective classifications. Display the output in {num} lines, with each line consisting of a sentence and its classification, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Recognize {num} primary sentences and their corresponding categories. Arrange the output into {num} lines, each containing a sentence followed by its category, divided by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Identify {num} essential sentences and their associated types. Format the output as {num} lines, where each line features a sentence and its type, delimited by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Extract {num} critical sentences and their respective classifications. Structure the output into {num} lines, with each line comprising a sentence and its classification, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Generate {num} vital sentences and their corresponding categories. Present the output in {num} lines, each consisting of a sentence and its category, distinguished by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Determine {num} principal sentences and their related types. Organize the output as {num} lines, where each line includes a sentence and its type, divided by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Isolate {num} significant sentences and their respective classifications. Display the output in {num} lines, with each line containing a sentence followed by its classification, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Identify {num} crucial sentences and their associated categories. Arrange the output into {num} lines, each featuring a sentence and its category, delimited by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Extract {num} fundamental sentences and their corresponding types. Format the output as {num} lines, where each line comprises a sentence and its type, distinguished by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Generate {num} primary sentences and their respective classifications. Structure the output into {num} lines, with each line consisting of a sentence and its classification, separated by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Determine {num} essential sentences and their related categories. Present the output in {num} lines, each containing a sentence followed by its category, divided by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Recognize {num} critical sentences and their associated types. Organize the output as {num} lines, where each line features a sentence and its type, delimited by '{sep}'. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]"
    ]
  },
  "gemini-1.5-pro-latest": {
    "llm_output": "",
    "parse_result": ""
  },
  "gpt-4o": {
    "llm_output": "[\n    \"Generate {num} KEY SENTENCE along with their respective types. Present the data on {num} distinct lines. Each line should contain a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Provide {num} KEY SENTENCE and their categories directly. Display the output on {num} individual lines with each line containing a KEY SENTENCE and its category, separated by {sep}.\",\n    \"List {num} KEY SENTENCE along with their types. The result should be formatted into {num} lines, each having a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Record {num} KEY SENTENCE and their corresponding types straight away. The output should be split into {num} lines, with each line showcasing a KEY SENTENCE and its type, divided by {sep}.\",\n    \"Display {num} KEY SENTENCE and the corresponding type directly. The result should be spread over {num} lines, where each line shows a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Print {num} KEY SENTENCE and their associated types immediately. The output must be divided into {num} lines, each having a KEY SENTENCE and its type, parted by {sep}.\",\n    \"Show {num} KEY SENTENCE accompanied by their types directly. Organize the output into {num} lines, with each line displaying a KEY SENTENCE and type, detached by {sep}.\",\n    \"Deliver {num} KEY SENTENCE alongside their types instantly. Arrange the output into {num} distinct lines, each showing a KEY SENTENCE and its type, split by {sep}.\",\n    \"Present {num} KEY SENTENCE with their types directly. Format the output on {num} lines where each line contains a KEY SENTENCE and its type, set apart by {sep}.\",\n    \"Exhibit {num} KEY SENTENCE including their corresponding types straightforwardly. The output should be arranged into {num} lines, each one showing a KEY SENTENCE and type, divided by {sep}.\",\n    \"Produce {num} KEY SENTENCE together with their types immediately. Distribute the output across {num} lines, each featuring a KEY SENTENCE and its type, parted by {sep}.\",\n    \"Emit {num} KEY SENTENCE with the corresponding type directly. Divide the output into {num} separate lines, each containing a KEY SENTENCE and type, separated by {sep}.\",\n    \"Return {num} KEY SENTENCE and their types straightforwardly. Make sure it appears on {num} different lines, each line showing a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Display {num} KEY SENTENCE and their respective types immediately. Split the data into {num} lines, with each one featuring a KEY SENTENCE and its type, divided by {sep}.\",\n    \"Provide {num} KEY SENTENCE with their types directly. Spread the output over {num} lines, each containing a KEY SENTENCE and type, with separation provided by {sep}.\",\n    \"Reveal {num} KEY SENTENCE and their corresponding types instantly. Output must be divided into {num} lines, where each line displays a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Enumerate {num} KEY SENTENCE and their categories directly. Present them across {num} lines, each line showing a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Disclose {num} KEY SENTENCE and their respective types directly. Layout the output over {num} lines, where each line presents a KEY SENTENCE and its type, separated by {sep}.\",\n    \"Showcase {num} KEY SENTENCE and their corresponding types readily. Organize the result into {num} separate lines, each containing a KEY SENTENCE and its type, divided by {sep}.\",\n    \"Convey {num} KEY SENTENCE and their categories immediately. Ensure the output spans {num} lines, each with a KEY SENTENCE and its type, separated by {sep}.\"\n]",
    "parse_result": [
      "Generate {num} KEY SENTENCE along with their respective types. Present the data on {num} distinct lines. Each line should contain a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Provide {num} KEY SENTENCE and their categories directly. Display the output on {num} individual lines with each line containing a KEY SENTENCE and its category, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "List {num} KEY SENTENCE along with their types. The result should be formatted into {num} lines, each having a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Record {num} KEY SENTENCE and their corresponding types straight away. The output should be split into {num} lines, with each line showcasing a KEY SENTENCE and its type, divided by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Display {num} KEY SENTENCE and the corresponding type directly. The result should be spread over {num} lines, where each line shows a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Print {num} KEY SENTENCE and their associated types immediately. The output must be divided into {num} lines, each having a KEY SENTENCE and its type, parted by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Show {num} KEY SENTENCE accompanied by their types directly. Organize the output into {num} lines, with each line displaying a KEY SENTENCE and type, detached by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Deliver {num} KEY SENTENCE alongside their types instantly. Arrange the output into {num} distinct lines, each showing a KEY SENTENCE and its type, split by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Present {num} KEY SENTENCE with their types directly. Format the output on {num} lines where each line contains a KEY SENTENCE and its type, set apart by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Exhibit {num} KEY SENTENCE including their corresponding types straightforwardly. The output should be arranged into {num} lines, each one showing a KEY SENTENCE and type, divided by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Produce {num} KEY SENTENCE together with their types immediately. Distribute the output across {num} lines, each featuring a KEY SENTENCE and its type, parted by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Emit {num} KEY SENTENCE with the corresponding type directly. Divide the output into {num} separate lines, each containing a KEY SENTENCE and type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Return {num} KEY SENTENCE and their types straightforwardly. Make sure it appears on {num} different lines, each line showing a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Display {num} KEY SENTENCE and their respective types immediately. Split the data into {num} lines, with each one featuring a KEY SENTENCE and its type, divided by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Provide {num} KEY SENTENCE with their types directly. Spread the output over {num} lines, each containing a KEY SENTENCE and type, with separation provided by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Reveal {num} KEY SENTENCE and their corresponding types instantly. Output must be divided into {num} lines, where each line displays a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Enumerate {num} KEY SENTENCE and their categories directly. Present them across {num} lines, each line showing a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Disclose {num} KEY SENTENCE and their respective types directly. Layout the output over {num} lines, where each line presents a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Showcase {num} KEY SENTENCE and their corresponding types readily. Organize the result into {num} separate lines, each containing a KEY SENTENCE and its type, divided by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
      "Convey {num} KEY SENTENCE and their categories immediately. Ensure the output spans {num} lines, each with a KEY SENTENCE and its type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]"
    ]
  },
  "ori": "Output any {num} KEY SENTENCE and its corresponding type directly. The output is divided into {num} lines. Each line displays a KEY SENTENCE and type, separated by {sep}. \nOutput example:\n[KEY_SENTENCE_1] {sep} [type_1]\n[KEY_SENTENCE_2] {sep} [type_2]",
  "gpt-3.5-turbo": {
    "llm_output": "```json\n[\n    \"Provide any {num} KEY SENTENCE along with its associated type without delay. The results should be structured in {num} lines, with each line presenting a KEY SENTENCE and its type, divided by {sep}. Output example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Deliver any {num} KEY SENTENCE paired with its respective type immediately. The results will be formatted across {num} lines. Each line will showcase a KEY SENTENCE and its type, separated by {sep}. Example output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"List any {num} KEY SENTENCE along with their corresponding types straightaway. The output should be organized into {num} lines. Every line should display a KEY SENTENCE and its type, divided by {sep}. For instance: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Supply any {num} KEY SENTENCE and its linked type promptly. The results must be formatted in {num} lines, each containing a KEY SENTENCE and type separated by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Present any {num} KEY SENTENCE alongside its relevant type without hesitation. The output should consist of {num} lines, where each line features a KEY SENTENCE and its type, partitioned by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Render any {num} KEY SENTENCE and their corresponding type right away. Format the output into {num} lines, with each line showing a KEY SENTENCE and type, separated by {sep}. For example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Offer any {num} KEY SENTENCE along with its related type immediately. Ensure the output is divided into {num} lines, each line featuring a KEY SENTENCE and type separated by {sep}. Example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Provide any {num} KEY SENTENCE with its applicable type without delay. The format should consist of {num} lines, where each line lists a KEY SENTENCE and its type, separated by {sep}. Output illustration: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Issue any {num} KEY SENTENCE along with their respective type swiftly. The output is to be organized into {num} lines, with each line containing a KEY SENTENCE and type, divided by {sep}. Example output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Disclose any {num} KEY SENTENCE and corresponding type without delay. The results should be presented across {num} lines, with each showing a KEY SENTENCE and its type, separated by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Share any {num} KEY SENTENCE with their respective type directly. Format the response in {num} lines, where each line shows one KEY SENTENCE and its type, clarified by {sep}. Output example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Communicate any {num} KEY SENTENCE along with its pertinent type immediately. Ensure the output comprises {num} lines, each containing a KEY SENTENCE and type divided by {sep}. For example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Transmit any {num} KEY SENTENCE and the associated type expeditiously. Structure the output in {num} lines, where each one reveals a KEY SENTENCE and type, split by {sep}. Illustration of output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Relay any {num} KEY SENTENCE with its accompanying type promptly. The output is to be formatted into {num} lines, each providing a KEY SENTENCE and type, distinguished by {sep}. Example shown: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Announce any {num} KEY SENTENCE and their respective type without delay. The format must consist of {num} lines, with each line including a KEY SENTENCE and type, separated by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Clarify any {num} KEY SENTENCE alongside its type right away. Organize the output into {num} lines, where each line should show a KEY SENTENCE and type, divided by {sep}. Example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Assemble any {num} KEY SENTENCE and their corresponding type quickly. The output shall be formatted in {num} lines, where every line features a KEY SENTENCE and type, separated by {sep}. For instance: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Catalog any {num} KEY SENTENCE with its relevant type without fuss. Structure the output across {num} lines, with each line presenting a KEY SENTENCE and type divided by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\",\n    \"Extract any {num} KEY SENTENCE along with its type promptly. The results should be broken into {num} lines, each line containing a KEY SENTENCE and type, separated by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]\"\n]\n```",
    "parse_result": [
      "Provide any {num} KEY SENTENCE along with its associated type without delay. The results should be structured in {num} lines, with each line presenting a KEY SENTENCE and its type, divided by {sep}. Output example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Deliver any {num} KEY SENTENCE paired with its respective type immediately. The results will be formatted across {num} lines. Each line will showcase a KEY SENTENCE and its type, separated by {sep}. Example output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "List any {num} KEY SENTENCE along with their corresponding types straightaway. The output should be organized into {num} lines. Every line should display a KEY SENTENCE and its type, divided by {sep}. For instance: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Supply any {num} KEY SENTENCE and its linked type promptly. The results must be formatted in {num} lines, each containing a KEY SENTENCE and type separated by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Present any {num} KEY SENTENCE alongside its relevant type without hesitation. The output should consist of {num} lines, where each line features a KEY SENTENCE and its type, partitioned by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Render any {num} KEY SENTENCE and their corresponding type right away. Format the output into {num} lines, with each line showing a KEY SENTENCE and type, separated by {sep}. For example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Offer any {num} KEY SENTENCE along with its related type immediately. Ensure the output is divided into {num} lines, each line featuring a KEY SENTENCE and type separated by {sep}. Example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Provide any {num} KEY SENTENCE with its applicable type without delay. The format should consist of {num} lines, where each line lists a KEY SENTENCE and its type, separated by {sep}. Output illustration: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Issue any {num} KEY SENTENCE along with their respective type swiftly. The output is to be organized into {num} lines, with each line containing a KEY SENTENCE and type, divided by {sep}. Example output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Disclose any {num} KEY SENTENCE and corresponding type without delay. The results should be presented across {num} lines, with each showing a KEY SENTENCE and its type, separated by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Share any {num} KEY SENTENCE with their respective type directly. Format the response in {num} lines, where each line shows one KEY SENTENCE and its type, clarified by {sep}. Output example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Communicate any {num} KEY SENTENCE along with its pertinent type immediately. Ensure the output comprises {num} lines, each containing a KEY SENTENCE and type divided by {sep}. For example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Transmit any {num} KEY SENTENCE and the associated type expeditiously. Structure the output in {num} lines, where each one reveals a KEY SENTENCE and type, split by {sep}. Illustration of output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Relay any {num} KEY SENTENCE with its accompanying type promptly. The output is to be formatted into {num} lines, each providing a KEY SENTENCE and type, distinguished by {sep}. Example shown: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Announce any {num} KEY SENTENCE and their respective type without delay. The format must consist of {num} lines, with each line including a KEY SENTENCE and type, separated by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Clarify any {num} KEY SENTENCE alongside its type right away. Organize the output into {num} lines, where each line should show a KEY SENTENCE and type, divided by {sep}. Example: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Assemble any {num} KEY SENTENCE and their corresponding type quickly. The output shall be formatted in {num} lines, where every line features a KEY SENTENCE and type, separated by {sep}. For instance: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Catalog any {num} KEY SENTENCE with its relevant type without fuss. Structure the output across {num} lines, with each line presenting a KEY SENTENCE and type divided by {sep}. Example format: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]",
      "Extract any {num} KEY SENTENCE along with its type promptly. The results should be broken into {num} lines, each line containing a KEY SENTENCE and type, separated by {sep}. Sample output: [KEY_SENTENCE_1] {sep} [type_1] [KEY_SENTENCE_2] {sep} [type_2]"
    ]
  }
}